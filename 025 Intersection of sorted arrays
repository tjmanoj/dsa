// Optimal
TC  : O(m + n)  since we are iterating the two arrays once
SC  : O(min(m,n))

#include<bits/stdc++.h>
using namespace std;

vector<int> intersection(vector<int> a, vector<int> b){
    vector<int> result;
    int i=0,j=0;
    while(i < a.size() && j< b.size()){
        if(a[i] == b[j]){
            result.push_back(a[i]);
            i++;
            j++;
        } 
        else if(a[i] < b[j]) i++;
        else j++;
    }
    return result;
}

int main() {
    int m,n;
    cin >> m >> n;
    vector<int> a;
    vector<int> b;
    for(int i = 0; i < m; i++){
        int temp;
        cin >> temp;
        a.push_back(temp);
    }
    for(int i = 0; i < n; i++){
        int temp;
        cin >> temp;
        b.push_back(temp);
    }
    vector<int> ans = intersection(a,b);
    for (auto k:ans) cout << k << " ";
    return 0;
}
